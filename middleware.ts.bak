import { type NextRequest } from 'next/server'
import { updateSession } from '@/lib/supabase/middleware'

export async function middleware(request: NextRequest) {
  // Only run Supabase middleware on protected routes
  const protectedPaths = ['/dashboard', '/learning', '/playground', '/analytics', '/team', '/toolkit']
  const path = request.nextUrl.pathname
  
  if (protectedPaths.some(protectedPath => path.startsWith(protectedPath))) {
    try {
      return await updateSession(request)
    } catch (error) {
      console.error('Middleware error:', error)
      // Continue without auth check if there's an error
      return
    }
  }
  
  // For public routes, just continue
  return
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     * - public folder
     */
    '/((?!_next/static|_next/image|favicon.ico|.*\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',
  ],
}